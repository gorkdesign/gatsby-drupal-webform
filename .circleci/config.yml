# Use the latest 2.1 version of CircleCI pipeline processing engine, see https://circleci.com/docs/2.0/configuration-reference/
version: 2.1

executors:
  drupalvm:
    working_directory: ~/drupal
    environment:
      - MYSQL_HOST=127.0.0.1
    docker:
      - image: circleci/php:7.3-apache-node
      - image: circleci/mariadb:latest
        environment:
          - MYSQL_USER=root
          - MYSQL_ROOT_PASSWORD=pass
          - MYSQL_PASSWORD=
          - MYSQL_ALLOW_EMPTY_PASSWORD=true
          - MYSQL_ROOT_HOST=%

workflows:
  build:
    jobs:
      - test

jobs:
  test:
    executor: drupalvm
    steps:
      - checkout
      - disable-php-memory-limit

      - run:
          name: Install PHP extensions
          command: |
            sudo apt-get install -y libpng-dev mariadb-client libzip-dev
            sudo docker-php-ext-install gd pdo_mysql zip pcntl

      - run: sudo composer self-update
      - composer-install-global-drush
      - composer-install

      - run:
          name: Wait for database connection
          command: dockerize -wait tcp://localhost:3306 -timeout 1m

      - run:
          name: Install drupal
          command: |
            drush site-install site_setup -y --db-url='mysql://root:pass@127.0.0.1:3306/circle_test'
            drush en -y gatsby_webform

      - run:
          name: Configure & start apache
          command: |
            echo "127.0.0.1 drupal.test" | sudo tee --append /etc/hosts
            sudo cp .circleci/vhosts.conf /etc/apache2/sites-available/000-default.conf
            sudo a2enmod rewrite
            sudo a2enmod headers
            sudo a2ensite 000-default
            sudo service apache2 restart

      - npm-install
      - run:
          name: Run NPM tests
          command:
            npm run test


commands:
  disable-php-memory-limit:
    steps:
      - run:
          name: Disable PHP memory limit
          command: echo 'memory_limit=-1' | sudo tee -a /usr/local/etc/php/php.ini

  composer-install-global-drush:
    description: "Install drush globally"
    steps:
      - run: composer global require drush/drush
      - run: touch $BASH_ENV
      - run: echo 'export PATH="$PATH:$HOME/.composer/vendor/bin:$HOME/drupal/bin:/usr/local/bin"' >> $BASH_ENV

  composer-install:
    description: "Install composer dependencies"
    steps:
      # special step to restore the dependency cache if `composer.lock` does not change
      # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
      - restore_cache:
          keys:
            - composer-{{ .Environment.CACHE_VERSION }}-{{ checksum "composer.lock" }}
            - composer-{{ .Environment.CACHE_VERSION }}-
      - run:
          name: Composer install
          command: composer install --no-interaction --no-progress --prefer-dist
          environment:
            COMPOSER_MEMORY_LIMIT: -1

      # special step to save the dependency cache with the `composer.lock` cache key template
      - save_cache:
          key: composer-{{ .Environment.CACHE_VERSION }}-{{ checksum "composer.lock" }}
          paths:
            - vendor
            - '{{ .Environment.HOME }}/.composer'

  npm-install:
    steps:
      # Caching node_modules is mostly pointless since npm ci deletes that anyway.
      - restore_cache:
          keys:
            - npm-{{ .Environment.CACHE_VERSION }}-{{ checksum "<< parameters.prefix >>/package-lock.json" }}
            - npm-{{ .Environment.CACHE_VERSION }}-
      - run: npm ci
      - save_cache:
          key: npm-{{ .Environment.CACHE_VERSION }}-{{ checksum "<< parameters.prefix >>/package-lock.json" }}
          paths:
            - '<< parameters.prefix >>/node_modules'
            - '{{ .Environment.HOME }}/.npm'
